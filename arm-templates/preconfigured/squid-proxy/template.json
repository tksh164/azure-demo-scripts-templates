{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vnetNewOrExisting": {
            "type": "string",
            "metadata": {
                "description": "Specify the target VNet existence by 'new' or 'existing'."
            }
        },
        "vnetResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "Specify the resource group name that contains the target VNet."
            }
        },
        "vnetName": {
            "type": "string",
            "metadata": {
                "description": "Specify the target VNet name that to deploy the proxy server virtual machine."
            }
        },
        "vnetAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "Specify the address prefix of the target VNet."
            }
        },
        "subnetName": {
            "type": "string",
            "metadata": {
                "description": "Specify the target subnet name that to deploy the proxy server virtual machine."
            }
        },
        "subnetAddressPrefix": {
            "type": "string",
            "metadata": {
                "description": "Specify the address prefix of the target subnet."
            }
        },
        "vmName": {
            "type": "string",
            "defaultValue": "squidproxy-vm1",
            "minLength": 1,
            "maxLength": 64,
            "metadata": {
                "description": ""
            }
        },
        "vmImagePublisher": {
            "type": "string",
            "metadata": {
                "description": ""
            }
        },
        "vmImageOffer": {
            "type": "string",
            "metadata": {
                "description": ""
            }
        },
        "vmImageSku": {
            "type": "string",
            "metadata": {
                "description": ""
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B2ms",
            "metadata": {
                "description": "Specify the VM size for the proxy server virtual machine."
            }
        },
        "osDiskStorageType": {
            "type": "string",
            "defaultValue": "StandardSSD_LRS",
            "allowedValues": [
                "Premium_LRS",
                "StandardSSD_LRS",
                "Standard_LRS"
            ],
            "metadata": {
                "description": "Specify the OS disk storage type for the proxy server virtual machine."
            }
        },
        "computerName": {
            "type": "string",
            "defaultValue": "proxy1",
            "minLength": 1,
            "maxLength": 64,
            "metadata": {
                "description": "Specify the computer name for the proxy server virtual machine."
            }
        },
        "adminUserName": {
            "type": "string",
            "defaultValue": "vmadmin",
            "metadata": {
                "description": "Specify the admin user name for the proxy server virtual machine."
            }
        },
        "adminPublicKey": {
            "type": "secureString",
            "metadata": {
                "description": "Specify the admin user's SSH public key for the proxy server virtual machine."
            }
        },
        "uniqueSuffixSeed": {
            "type": "string",
            "defaultValue": "[utcNow('yyyyMMddhhmmssfff')]",
            "metadata": {
                "description": "Don't change this value."
            }
        }
    },
    "variables": {

        // Common

        //"uniqueSuffix": "[concat('0', toLower(take(uniqueString(parameters('uniqueSuffixSeed')), 3)))]",
        "location": "[resourceGroup().location]",

        // Virtual network

        "shouldCreateNewVNet": "[equals(parameters('vnetNewOrExisting'), 'new')]",
        "subnetId": "[resourceId(parameters('vnetResourceGroupName'), 'Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), parameters('subnetName'))]",

        "nsgName": "[concat(parameters('vnetName'), '-', parameters('subnetName'), '-nsg')]",

        // Proxy server virtual machine

        "proxyVm": {
            "vmName": "[parameters('vmName')]",
            "vmSize": "[parameters('vmSize')]",
            "computerName": "[parameters('computerName')]",
            "osDiskName": "[concat(parameters('vmName'), '-osdisk')]",
            "osDiskStorageType": "[parameters('osDiskStorageType')]",
            "nicName": "[concat(parameters('vmName'), '-nic1')]",
            "pipName": "[concat(parameters('vmName'), '-ip1')]",
            "cloudInitFileUri": "https://raw.githubusercontent.com/tksh164/azure-demo-scripts-templates/master/arm-templates/preconfigured/squid-proxy/cloud-init.yaml"
        }
    },
    "resources": [

        // Virtual network
        {
            "condition": "[variables('shouldCreateNewVNet')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "name": "[variables('nsgName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": []   
            }
        },
        {
            "condition": "[variables('shouldCreateNewVNet')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[parameters('vnetName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('vnetAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnetAddressPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                            }
                        }
                    }
                ]
            }
        },

        // Proxy server virtual machine

        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-08-01",
            "name": "[variables('proxyVm').pipName]",
            "location": "[variables('location')]",
            "zones": [
                "1"
            ],
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIpAllocationMethod": "Static"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "name": "[variables('proxyVm').nicName]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
                "[resourceId('Microsoft.Network/publicIpAddresses', variables('proxyVm').pipName)]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetId')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIpAddresses', variables('proxyVm').pipName)]",
                                "properties": {
                                    "deleteOption": "Delete"
                                }
                            }
                       }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2022-03-01",
            "name": "[variables('proxyVm').vmName]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('proxyVm').nicName)]"
            ],
            "zones": [
                "1"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('proxyVm').vmSize]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('proxyVm').nicName)]",
                            "properties": {
                                "deleteOption": "Delete"
                            }
                        }
                    ]
                },
                "storageProfile": {
                    "osDisk": {
                        "name": "[variables('proxyVm').osDiskName]",
                        "createOption": "fromImage",
                        "deleteOption": "Delete",
                        "managedDisk": {
                            "storageAccountType": "[variables('proxyVm').osDiskStorageType]"
                        }
                    },
                    "imageReference": {
                        "publisher": "[parameters('vmImagePublisher')]",
                        "offer": "[parameters('vmImageOffer')]",
                        "sku": "[parameters('vmImageSku')]",
                        "version": "latest"
                    },
                    "dataDisks": []                    
                },
                "osProfile": {
                    "computerName": "[variables('proxyVm').computerName]",
                    "adminUsername": "[parameters('adminUserName')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        },
                        "patchSettings": {
                            "assessmentMode": "ImageDefault",
                            "patchMode": "ImageDefault"
                        }
                    },
                    "customData": "[base64(concat('#include\n', variables('proxyVm').cloudInitFileUri))]"
                },
                "securityProfile": {
                    "securityType": "TrustedLaunch",
                    "uefiSettings": {
                        "secureBootEnabled": true,
                        "vTpmEnabled": true
                    }
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        }
    ],
    "outputs": {
    }
}
