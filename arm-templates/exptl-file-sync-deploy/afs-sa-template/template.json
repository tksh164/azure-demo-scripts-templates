{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourcePrefix": {
            "type": "string",
            "defaultValue": "afs",
            "metadata": {
                "description": "Specify the prefix for the resource name."
            }
        },
        "storageAccountNamePrefix": {
            "type": "string",
            "defaultValue": "fsync",
            "metadata": {
                "description": "Specify the prefix for the storage account resource name."
            }
        },
        "syncGroupCount": {
            "type": "int",
            "defaultValue": 3,
            "minValue": 1,
            "maxValue": 200,
            "metadata": {
                "description": "Specify the number of sync groups to create."
            }
        },
        "storageSyncPrincipalId": {
            "type": "string",
            "minLength": 36,
            "maxLength": 36,
            "metadata": {
                "description": "The Microsoft.StorageSync service principal ID. This can get by `(Get-AzADServicePrincipal -DisplayNameBeginsWith Microsoft.StorageSync | Select-Object -First 1).Id`."
            }
        }
    },
    "variables": {

        // General

        "location": "[resourceGroup().location]",
        "uniqueString": "[substring(uniqueString(resourceGroup().id), 0, 3)]",

        // Storage accounts

        "storageAccountNameSuffix": "[concat('x', variables('uniqueString'))]",
        "fileShareName": "fsync-share",

        // Storage Sync Service

        "storageSyncServicesName": "[concat(parameters('resourcePrefix'), variables('uniqueString'), '-fsync')]",
        "syncGroupNamePrefix": "syncgroup-",
        "storageSyncRoleAssignmentDeploymentNamePrefix": "storageSyncRoleAssignment-",

        // Arrays

        "copy": [

            // Storage accounts

            {
                "name": "storageAccountNames",
                "count": "[parameters('syncGroupCount')]",
                "input": "[concat(parameters('storageAccountNamePrefix'), padLeft(copyIndex('StorageAccountNames', 1), 3, '0'), variables('storageAccountNameSuffix'))]"
            },

            // Storage Sync Service

            {
                "name": "storageSyncRoleAssignmentDeploymentName",
                "count": "[parameters('syncGroupCount')]",
                "input": "[concat(variables('storageSyncRoleAssignmentDeploymentNamePrefix'), padLeft(copyIndex('storageSyncRoleAssignmentDeploymentName', 1), 3, '0'))]"
            },
            {
                "name": "storageSyncRoleAssignmentNames",
                "count": "[parameters('syncGroupCount')]",
                "input": "[guid(resourceGroup().id, string(copyIndex('storageSyncRoleAssignmentNames')))]"
            },
            {
                "name": "syncGroupNames",
                "count": "[parameters('syncGroupCount')]",
                "input": "[concat(variables('syncGroupNamePrefix'), padLeft(copyIndex('syncGroupNames', 1), 3, '0'))]"
            },
            {
                "name": "cloudEndpointNames",
                "count": "[parameters('syncGroupCount')]",
                "input": "[guid(resourceGroup().id, string(copyIndex('cloudEndpointNames')))]"
            }
        ]
    },
    "resources": [

        // Storage Account

        {
            "copy": {
                "name": "storageAccountCopy",
                "count": "[parameters('syncGroupCount')]"
            },
            "name": "[variables('storageAccountNames')[copyIndex()]]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-05-01",
            "location": "[variables('location')]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_GZRS"
            },
            "properties": {
                "minimumTlsVersion": "TLS1_2",
                "supportsHttpsTrafficOnly": true,
                "allowBlobPublicAccess": false,
                "allowSharedKeyAccess": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Allow",
                    "ipRules": []
                }
            },
            "resources": [
                {
                    "name": "default",
                    "type": "fileServices",
                    "apiVersion": "2022-05-01",
                    "dependsOn": [
                        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNames')[copyIndex()])]"
                    ],
                    "properties": {},
                    "resources": [
                        {
                            "name": "[variables('fileShareName')]",
                            "type": "shares",
                            "apiVersion": "2021-04-01",
                            "dependsOn": [
                                "[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('storageAccountNames')[copyIndex()], 'default')]"
                            ],
                            "properties": {
                                "accessTier": "Hot",
                                "shareQuota": 5120
                            }
                        }
                    ]
                }
            ]
        },

        // Role assignments for Microsoft.StorageSync service principal

        {
            "copy": {
                "name": "storageSyncRoleAssignmentCopy",
                "count": "[parameters('syncGroupCount')]"
            },
            "name": "[variables('storageSyncRoleAssignmentDeploymentName')[copyIndex()]]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNames')[copyIndex()])]"
            ],
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "Inner"
                },
                "parameters": {
                    "name": {
                        "value": "[variables('storageSyncRoleAssignmentNames')[copyIndex()]]"
                    },
                    "scope": {
                        "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNames')[copyIndex()])]"
                    },
                    "roleDefinitionId": {
                        // The Reader and Data Access role definition ID. The ID is common. This can get by (Get-AzRoleDefinition -Name 'Reader and Data Access').Id
                        "value": "[resourceId('Microsoft.Authorization/roleDefinitions', 'c12c1c16-33a1-487b-954d-41c89c60f349')]"
                    },
                    "principalType": {
                        "value": "ServicePrincipal"
                    },
                    "principalId": {
                        "value": "[parameters('storageSyncPrincipalId')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "name": {
                            "type": "string"
                        },
                        "scope": {
                            "type": "string"
                        },
                        "roleDefinitionId": {
                            "type": "string"
                        },
                        "principalType": {
                            "type": "string"
                        },
                        "principalId": {
                            "type": "string"
                        }
                    },
                    "resources": [
                        {
                            "name": "[parameters('name')]",
                            "type": "Microsoft.Authorization/roleAssignments",
                            "apiVersion": "2022-04-01",
                            "scope": "[parameters('scope')]",
                            "properties": {
                                "roleDefinitionId": "[parameters('roleDefinitionId')]",
                                "principalType": "[parameters('principalType')]",
                                "principalId": "[parameters('principalId')]"
                            }
                        }
                    ]
                }
            }
        },

        // Storage Sync Service

        {
            "name": "[variables('storageSyncServicesName')]",
            "type": "Microsoft.StorageSync/storageSyncServices",
            "apiVersion": "2020-09-01",
            "location": "[variables('location')]",
            "properties": {
                "incomingTrafficPolicy": "AllowAllTraffic"
            }
        },

        // Sync Group

        {
            "copy": {
                "name": "syncGroupCopy",
                "count": "[parameters('syncGroupCount')]"
            },
            "name": "[concat(variables('storageSyncServicesName'), '/', variables('syncGroupNames')[copyIndex()])]",
            "type": "Microsoft.StorageSync/storageSyncServices/syncGroups",
            "apiVersion": "2020-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.StorageSync/storageSyncServices', variables('storageSyncServicesName'))]"
            ],
            "properties": {}
        },

        // Cloud Endpoints

        {
            "copy": {
                "name": "cloudEndpointCopy",
                "count": "[parameters('syncGroupCount')]"
            },
            "name": "[concat(variables('storageSyncServicesName'), '/', variables('syncGroupNames')[copyIndex()], '/', variables('cloudEndpointNames')[copyIndex()])]",
            "type": "Microsoft.StorageSync/storageSyncServices/syncGroups/cloudEndpoints",
            "apiVersion": "2020-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', variables('storageAccountNames')[copyIndex()], 'default', variables('fileShareName'))]",
                "[resourceId('Microsoft.Resources/deployments', variables('storageSyncRoleAssignmentDeploymentName')[copyIndex()])]",
                "[resourceId('Microsoft.StorageSync/storageSyncServices/syncGroups', variables('storageSyncServicesName'), variables('syncGroupNames')[copyIndex()])]"
            ],
            "properties": {
                "storageAccountResourceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountNames')[copyIndex()])]",
                "azureFileShareName": "[variables('fileShareName')]",
                "storageAccountTenantId": "[subscription().tenantId]"
            }
        }
    ]
}
